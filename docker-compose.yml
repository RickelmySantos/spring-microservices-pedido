services:
  postgres:
    image: postgres:15
    container_name: postgres-ms-pedido
    ports:
      - "5432:5432"
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
    restart: unless-stopped
    healthcheck:
      test: "pg_isready --username=postgres && psql --username=postgres --list"
      timeout: 10s
      retries: 20
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./infra/postgres/scripts/init.sql:/docker-entrypoint-initdb.d/init.sql

    networks:
      - rsdesenvolvimento

  eureka:
    build:
      context: ./eureka-server
      dockerfile: Dockerfile
    container_name: eurekaserver
    ports:
      - "8761:8761"
    environment:
      SPRING_PROFILES_ACTIVE: default
      EUREKA_CLIENT_SERVICEURL_DEFAULTZONE: http://eurekaserver:8761/api/eureka/
      # SPRING_CONFIG_IMPORT: configserver:http://configserver:8071/api
      EUREKA_INSTANCE_IP_ADDRESS: localhost
    networks:
      - rsdesenvolvimento
    healthcheck:
      test: "curl --fail --silent localhost:8761/api/actuator/health | grep UP || exit 1"
      interval: 10s
      timeout: 5s
      retries: 20
      start_period: 60s

  rabbitmq:
    image: rabbitmq:4.1-management
    container_name: rabbitmq-local
    ports:
      - "5672:5672"
      - "15672:15672"
    environment:
      RABBITMQ_DEFAULT_USER: guest
      RABBITMQ_DEFAULT_PASS: guest
    restart: unless-stopped
    networks:
      - rsdesenvolvimento
  prometheus:
    image: prom/prometheus
    container_name: prometheus
    ports:
      - "9090:9090"
    volumes:
      - ./prometheus.yml:/etc/prometheus/prometheus.yml
    networks:
      - rsdesenvolvimento
    depends_on:
      - pedido-service
      - notificacao-service

  grafana:
    image: grafana/grafana:latest
    container_name: grafana
    ports:
      - "3000:3000"
    environment:
      - GF_SECURITY_ADMIN_USER=admin
      - GF_SECURITY_ADMIN_PASSWORD=admin
    volumes:
      - grafana_data:/var/lib/grafana
    depends_on:
      - prometheus
    networks:
      - rsdesenvolvimento

  usuario:
    build:
      context: ./usuario
      dockerfile: Dockerfile
    # profiles:
    #   - "app"
    ports:
      - "8081:8081"
    environment:
      SPRING_PROFILES_ACTIVE: default
      SPRING_DATASOURCE_URL: jdbc:postgresql://postgres:5432/usuario
      SPRING_DATASOURCE_USERNAME: postgres
      SPRING_DATASOURCE_PASSWORD: postgres
      SPRING_DATASOURCE_DRIVER-CLASS_NAME: org.postgresql.Driver
      EUREKA_CLIENT_SERVICEURL_DEFAULTZONE: http://eurekaserver:8761/api/eureka/
    depends_on:
      eureka:
        condition: service_healthy
      postgres:
        condition: service_healthy
    networks:
      - rsdesenvolvimento

  pedido-service:
    build:
      context: ./pedido-service
      dockerfile: Dockerfile
    # profiles:
    #   - "app"
    ports:
      - "8083:8083"
    environment:
      SPRING_PROFILES_ACTIVE: default
      SPRING_DATASOURCE_URL: jdbc:postgresql://postgres:5432/pedido
      SPRING_DATASOURCE_USERNAME: postgres
      SPRING_DATASOURCE_PASSWORD: postgres
      SPRING_DATASOURCE_DRIVER-CLASS_NAME: org.postgresql.Driver
      EUREKA_CLIENT_SERVICEURL_DEFAULTZONE: http://eurekaserver:8761/api/eureka/
    depends_on:
      eureka:
        condition: service_healthy
      postgres:
        condition: service_healthy
    networks:
      - rsdesenvolvimento

  notificacao-service:
    build:
      context: ./notificacao-service
      dockerfile: Dockerfile
    # profiles:
    #   - "app"
    ports:
      - "8085:8085"
    environment:
      SPRING_PROFILES_ACTIVE: default
      SPRING_DATASOURCE_URL: jdbc:postgresql://postgres:5432/notificacao
      SPRING_DATASOURCE_USERNAME: postgres
      SPRING_DATASOURCE_PASSWORD: postgres
      SPRING_DATASOURCE_DRIVER-CLASS_NAME: org.postgresql.Driver
      EUREKA_CLIENT_SERVICEURL_DEFAULTZONE: http://eurekaserver:8761/api/eureka/
    depends_on:
      eureka:
        condition: service_healthy
      postgres:
        condition: service_healthy
    networks:
      - rsdesenvolvimento

  pagamento-service:
    build:
      context: ./pagamento-service
      dockerfile: Dockerfile
    # profiles:
    #   - "app"
    ports:
      - "8084:8084"
    environment:
      SPRING_PROFILES_ACTIVE: default
      SPRING_DATASOURCE_URL: jdbc:postgresql://postgres:5432/pagamento
      SPRING_DATASOURCE_USERNAME: postgres
      SPRING_DATASOURCE_PASSWORD: postgres
      SPRING_DATASOURCE_DRIVER-CLASS_NAME: org.postgresql.Driver
      EUREKA_CLIENT_SERVICEURL_DEFAULTZONE: http://eurekaserver:8761/api/eureka/
    depends_on:
      eureka:
        condition: service_healthy
      postgres:
        condition: service_healthy
    networks:
      - rsdesenvolvimento

networks:
  rsdesenvolvimento:
    driver: bridge
volumes:
  postgres_data:
  grafana_data:
