
# FROM node:20.13.1-alpine3.19

# RUN apk add --no-cache gettext

# WORKDIR /app

# COPY package.json package-lock.json ./

# RUN npm install

# COPY . .

# EXPOSE 4200

# # CMD ["npm", "start"]
# CMD ["/bin/sh", "-c", "envsubst < /app/src/assets/env.template.js > /app/src/assets/env.template.js.tmp && mv /app/src/assets/env.template.js.tmp /app/src/assets/env.template.js && exec npm start"]
# ===============================================================

# Construção (Build) da Aplicação

FROM node:20-alpine AS build

WORKDIR /app

COPY package*.json ./

RUN npm install

COPY . .


RUN npm run build -- --configuration production

# Servidor de Produção com Nginx
FROM nginx:stable-alpine

RUN apk add --no-cache gettext

COPY entrypoint.sh /docker-entrypoint.sh
RUN chmod +x /docker-entrypoint.sh

COPY --from=build /app/dist/rsdesenvolvimento-ui/browser /usr/share/nginx/html

COPY src/assets/env.template.js /usr/share/nginx/html/assets/env.template.js

COPY nginx.conf /etc/nginx/conf.d/default.conf



EXPOSE 80

ENTRYPOINT ["/docker-entrypoint.sh"]
# ENTRYPOINT ["/bin/sh", "-c", "envsubst < /usr/share/nginx/html/assets/env.template.js > /usr/share/nginx/html/assets/env.js && exec nginx -g 'daemon off;'"]
